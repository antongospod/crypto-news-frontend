name: Blue-Green Deploy to VPS

on:
  push:
    branches: [master]

concurrency:
  group: production-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/cryptocenter
            echo "üöÄ Starting Blue-Green deployment..."

            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
            git stash push -m "Auto-stash $(date)" || true
            git reset --hard HEAD
            git pull origin master

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç –∏–∑ nginx –∫–æ–Ω—Ñ–∏–≥–∞
            CURRENT_PORT=$(grep -o "172.20.0.1:[0-9]*" nginx.conf | head -1 | cut -d: -f2)

            if [ "$CURRENT_PORT" = "3000" ]; then
              NEW_PORT=3002
              COLOR="üü¢ Green"
              echo "üîµ Current: Blue (3000) ‚Üí Deploying: $COLOR ($NEW_PORT)"
            else
              NEW_PORT=3000
              COLOR="üîµ Blue"
              echo "üü¢ Current: Green (3002) ‚Üí Deploying: $COLOR ($NEW_PORT)"
            fi

            # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
            echo "üî® Building new version..."
            docker compose build nuxt-app

            # –£–±–∏–≤–∞–µ–º staging –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
            echo "üßπ Cleaning up staging container..."
            docker stop nuxt-app-staging 2>/dev/null || true
            docker rm -f nuxt-app-staging 2>/dev/null || true

            # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ NEW_PORT (–Ω–µ —Ç—Ä–æ–≥–∞–µ–º CURRENT_PORT!)
            echo "üî´ Freeing port $NEW_PORT..."
            fuser -k $NEW_PORT/tcp 2>/dev/null || true
            sleep 2

            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ NEW_PORT
            echo "üöÄ Starting new version on port $NEW_PORT..."
            docker run -d \
              --name nuxt-app-staging \
              --network cryptocenter_app-network \
              -p $NEW_PORT:3000 \
              -e NODE_ENV=production \
              -e NUXT_PUBLIC_SITE_NAME=CryptoCenter \
              -e NUXT_PUBLIC_SITE_URL=https://cryptocenter.finance \
              cryptocenter-nuxt-app

            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            echo "‚è≥ Waiting for new version to start..."
            sleep 20

            # Health check –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
            echo "üîç Health checking new version..."
            HEALTH_OK=false
            for i in {1..10}; do
              if curl -f -s http://127.0.0.1:$NEW_PORT > /dev/null; then
                echo "‚úÖ New version is healthy"
                HEALTH_OK=true
                break
              fi
              echo "‚è≥ Attempt $i/10 - waiting..."
              sleep 3
            done

            if [ "$HEALTH_OK" != "true" ]; then
              echo "‚ùå New version failed health check!"
              docker logs nuxt-app-staging --tail 50
              docker stop nuxt-app-staging
              docker rm nuxt-app-staging
              exit 1
            fi

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º nginx –Ω–∞ –Ω–æ–≤—ã–π –ø–æ—Ä—Ç
            echo "üîÑ Switching nginx to new version..."
            cp nginx.conf nginx.conf.backup
            sed -i "s/172.20.0.1:$CURRENT_PORT/172.20.0.1:$NEW_PORT/g" nginx.conf

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx –ø–µ—Ä–µ–¥ reload
            echo "üîç Testing nginx configuration..."
            docker exec nginx nginx -t
            if [ $? -ne 0 ]; then
              echo "‚ùå Nginx configuration test failed!"
              cp nginx.conf.backup nginx.conf
              docker stop nuxt-app-staging
              docker rm nuxt-app-staging
              exit 1
            fi

            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            echo "üîÑ Reloading nginx..."
            docker exec nginx nginx -s reload

            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            sleep 5

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ nginx –ø–µ—Ä–µ–∫–ª—é—á–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
            echo "üîç Checking if nginx switched successfully..."

            # –ú–µ—Ç–æ–¥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ localhost (–æ–±—Ö–æ–¥ SSL)
            NGINX_OK=false
            if curl -f -s -H "Host: cryptocenter.finance" http://localhost > /dev/null 2>&1; then
              echo "‚úÖ Nginx responds on localhost"
              NGINX_OK=true
            fi

            # –ú–µ—Ç–æ–¥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π health endpoint
            if [ "$NGINX_OK" = "true" ] && curl -f -s http://localhost/health > /dev/null 2>&1; then
              echo "‚úÖ Health endpoint responds"
              NGINX_OK=true
            else
              # –ú–µ—Ç–æ–¥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π –¥–æ–º–µ–Ω —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º SSL
              if curl -f -s -k https://cryptocenter.finance > /dev/null 2>&1; then
                echo "‚úÖ External domain responds (SSL ignored)"
                NGINX_OK=true
              fi
            fi

            # –ú–µ—Ç–æ–¥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ nginx –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç—ã
            if docker exec nginx ss -tlnp | grep -q ":443"; then
              echo "‚úÖ Nginx is listening on port 443"
            fi

            if [ "$NGINX_OK" = "true" ]; then
              echo "‚úÖ Nginx successfully switched to new version"

              # –¢–û–õ–¨–ö–û –¢–ï–ü–ï–†–¨ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
              echo "üõë Stopping old version on port $CURRENT_PORT..."

              # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç 3000, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
              if [ "$CURRENT_PORT" = "3000" ]; then
                docker compose stop nuxt-app 2>/dev/null || true
                # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ —Å—Ç–∞—Ä–æ–º –ø–æ—Ä—Ç—É –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
                sleep 2
                fuser -k $CURRENT_PORT/tcp 2>/dev/null || true
              else
                # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç 3002, —É–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –Ω–µ–º
                fuser -k $CURRENT_PORT/tcp 2>/dev/null || true
              fi

              echo "‚úÖ $COLOR deployment completed successfully!"

            else
              echo "‚ùå Nginx switch failed, rolling back..."
              cp nginx.conf.backup nginx.conf
              docker exec nginx nginx -s reload
              docker stop nuxt-app-staging
              docker rm nuxt-app-staging

              # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
              echo "üìã Nginx error logs:"
              docker exec nginx tail -n 20 /var/log/nginx/error.log

              exit 1
            fi

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            echo "üîÑ Updating other services..."
            docker compose up -d --no-deps nginx prometheus grafana cadvisor node-exporter

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            echo "üìä Final status:"
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ –ø–æ—Ä—Ç—ã —Å–ª—É—à–∞—é—Ç—Å—è
            echo "üîç Active ports:"
            ss -tlnp | grep -E ":(80|443|3000|3002)" || netstat -tlnp | grep -E ":(80|443|3000|3002)"

            # –û—á–∏—Å—Ç–∫–∞
            echo "üßπ Cleaning up..."
            docker system prune -f

            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
            echo "üåê Final availability check:"
            curl -I -s -k https://cryptocenter.finance | head -n 1

            echo "‚úÖ Blue-Green deployment completed!"
            echo "üåê Site available at: https://cryptocenter.finance"
