# .github/workflows/deploy.yml
name: Rolling Deploy to VPS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Rolling Deploy to VPS
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/cryptocenter
            
            echo "üîÑ Starting Rolling Deployment..."
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
            git pull origin master
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
            echo "üìä Current status:"
            docker compose ps
            
            # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
            echo "üî® Building new image..."
            docker compose build nuxt-app
            
            if [ $? -ne 0 ]; then
              echo "‚ùå Build failed!"
              exit 1
            fi
            
            echo "‚úÖ Build successful"
            
            # –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
            check_health() {
              local max_attempts=8
              local attempt=1
            
              while [ $attempt -le $max_attempts ]; do
                echo "üè• Health check attempt $attempt/$max_attempts..."
            
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
                if docker compose ps nuxt-app | grep -q "Up"; then
                  echo "‚úÖ Container is running"
            
                  # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                  sleep 5
            
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –æ—Ç–≤–µ—Ç
                  if docker compose exec -T nuxt-app curl -f -s --max-time 15 http://localhost:3000/ > /dev/null 2>&1; then
                    echo "‚úÖ Health check passed!"
                    return 0
                  fi
            
                  echo "üîç Checking what's wrong..."
                  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
                  docker compose logs --tail 15 nuxt-app
            
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
                  docker compose exec -T nuxt-app ps aux | grep node || echo "No node process"
            
                else
                  echo "‚ùå Container is not running"
                  docker compose ps nuxt-app
                  docker compose logs --tail 10 nuxt-app
                fi
            
                echo "‚ö†Ô∏è Health check failed, attempt $attempt/$max_attempts"
                sleep 15
                attempt=$((attempt + 1))
              done
            
              echo "‚ùå Health check failed after $max_attempts attempts"
              return 1
            }
            
            # –ü–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º
            echo "üîÑ Restarting with new image..."
            docker compose up -d nuxt-app
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
            echo "‚è≥ Waiting for container to initialize..."
            sleep 20
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
            if check_health; then
              echo "üéâ Rolling deployment successful!"
            
              # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
              docker compose restart nginx
            
            else
              echo "‚ùå Deployment failed!"
            
              # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
              echo "üîç Detailed diagnostics:"
              docker compose ps
              docker compose logs --tail 30 nuxt-app
            
              exit 1
            fi
            
            # –û—á–∏—Å—Ç–∫–∞
            echo "üßπ Cleaning up..."
            docker system prune -f
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            echo "üìä Final status:"
            docker compose ps
            
            echo "üéâ Deployment completed successfully!"