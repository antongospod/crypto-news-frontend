name: Rolling Deploy to VPS

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Rolling Deploy to VPS
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/cryptocenter
            
            echo "🔄 Starting Rolling Deployment..."
            
            # Сохраняем предыдущий коммит для сравнения
            PREV_COMMIT=$(git rev-parse HEAD)
            
            git pull origin master
            
            CURRENT_COMMIT=$(git rev-parse HEAD)
            
            # Проверяем, что изменилось
            echo "📝 Checking what changed..."
            CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $CURRENT_COMMIT)
            echo "Changed files: $CHANGED_FILES"
            
            # Флаги для определения что перезапускать
            APP_CHANGED=false
            MONITORING_CHANGED=false
            NGINX_CHANGED=false
            
            # Анализируем изменения
            if echo "$CHANGED_FILES" | grep -E "(pages/|components/|server/|nuxt.config|package\.json|Dockerfile)" > /dev/null; then
              APP_CHANGED=true
              echo "🔍 Application code changed"
            fi
            
            if echo "$CHANGED_FILES" | grep -E "monitoring/" > /dev/null; then
              MONITORING_CHANGED=true
              echo "📊 Monitoring configuration changed"
            fi
            
            if echo "$CHANGED_FILES" | grep -E "nginx\.conf" > /dev/null; then
              NGINX_CHANGED=true
              echo "🌐 Nginx configuration changed"
            fi
            
            # Перестраиваем приложение только если код изменился
            if [ "$APP_CHANGED" = true ]; then
              echo "🔨 Building new application image..."
              docker compose build nuxt-app
            else
              echo "⏭️ Skipping application build - no code changes detected"
            fi
            
            # Перезапускаем сервисы в зависимости от изменений
            if [ "$APP_CHANGED" = true ]; then
              echo "🔄 Restarting application..."
              docker compose up -d nuxt-app
            
              # Ждем запуска приложения
              echo "⏳ Waiting for application to start..."
              sleep 10
            
              # Проверяем здоровье приложения
              if docker compose exec nuxt-app curl -f http://localhost:3000/api/health 2>/dev/null; then
                echo "✅ Application is healthy"
              else
                echo "⚠️ Application health check failed, but continuing..."
              fi
            fi
            
            if [ "$NGINX_CHANGED" = true ]; then
              echo "🌐 Restarting Nginx..."
              docker compose restart nginx
            fi
            
            if [ "$MONITORING_CHANGED" = true ]; then
              echo "📊 Restarting monitoring services..."
            
              # Проверяем конкретно что изменилось в мониторинге
              if echo "$CHANGED_FILES" | grep -E "monitoring/dashboards/" > /dev/null; then
                echo "📈 Dashboard files changed - restarting Grafana..."
                docker compose restart grafana
            
                # Ждем старта Grafana
                sleep 15
            
                # Проверяем, что дашборды загрузились
                echo "🔍 Checking dashboard provisioning..."
                docker logs grafana --tail 20 | grep -E "(provisioning|dashboard)" || true
              fi
            
              if echo "$CHANGED_FILES" | grep -E "monitoring/prometheus\.yml" > /dev/null; then
                echo "📊 Prometheus config changed - restarting Prometheus..."
                docker compose restart prometheus
              fi
            
              if echo "$CHANGED_FILES" | grep -E "monitoring/grafana-datasources\.yml" > /dev/null; then
                echo "🔌 Grafana datasources changed - restarting Grafana..."
                docker compose restart grafana
              fi
            fi
            
            # Если ничего не изменилось, просто обновляем все сервисы
            if [ "$APP_CHANGED" = false ] && [ "$MONITORING_CHANGED" = false ] && [ "$NGINX_CHANGED" = false ]; then
              echo "🔄 No specific changes detected, performing full restart..."
              docker compose up -d
            fi
            
            echo "🧹 Cleaning up unused Docker resources..."
            docker system prune -f
            
            # Удаляем старые образы (кроме последних 2)
            docker images --format "table {{.Repository}}:{{.Tag}}\t{{.ID}}\t{{.CreatedAt}}" | grep cryptocenter || true
            docker image prune -f
            
            echo "📊 Final status:"
            docker compose ps
            
            echo "🔍 Service health checks:"
            
            # Проверка Nuxt приложения
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "✅ Nuxt app is responding"
            else
              echo "❌ Nuxt app is not responding"
            fi
            
            # Проверка Nginx
            if curl -f http://localhost:80 > /dev/null 2>&1; then
              echo "✅ Nginx is responding"
            else
              echo "❌ Nginx is not responding"
            fi
            
            # Проверка Grafana
            if curl -f http://localhost:3001/api/health > /dev/null 2>&1; then
              echo "✅ Grafana is responding"
            else
              echo "❌ Grafana is not responding"
            fi
            
            # Проверка Prometheus
            if curl -f http://localhost:9090/-/healthy > /dev/null 2>&1; then
              echo "✅ Prometheus is responding"
            else
              echo "❌ Prometheus is not responding"
            fi
            
            echo ""
            echo "🎉 Deployment completed successfully!"
            echo "📊 Monitoring available at: https://cryptocenter.finance:3001"
            echo "📈 Metrics available at: https://cryptocenter.finance:9090"